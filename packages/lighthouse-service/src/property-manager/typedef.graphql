scalar DateTime

input LHPropertyAppInput {
  name: String
  branch: String
}

input AddLHPropertyAppInput {
  name: String!
  branch: String!
}

input LHPropertyInput {
  name: String
  description: String
  projectId: String!
  apps: [LHPropertyAppInput!]!
}

input AddLHPropertyInput {
  name: String!
  description: String
  projectId: String!
  apps: [AddLHPropertyAppInput!]!
  createdBy: String!
}

input UpdateLHPropertyInput {
  name: String
  description: String
  projectId: String
  apps: [LHPropertyAppInput!]
  updatedBy: String!
}

type LHPropertyUserProfileType {
  cn: String
  uid: String
  rhatUUID: String
  mail: String
}

type LHPropertyAppType {
  id: ID
  name: String
  branch: String
}

type LHPropertyType {
  id: ID
  name: String
  description: String
  projectId: String
  apps: [LHPropertyAppType!]
  createdBy: LHPropertyUserProfileType
  createdOn: DateTime
  updatedBy: LHPropertyUserProfileType
  updatedOn: DateTime
}

type Query {
  """
  list all lighthouse properties
  """
  listLHProperties(
    limit: Int
    offset: Int
    search: String
    user: String
  ): [LHPropertyType]
  """
  to get a particular lighthouse property by id
  """
  getLHPropertyById(id: ID!): LHPropertyType
}

type Mutation {
  """
  create a new lighthouse property
  """
  createLHProperty(property: AddLHPropertyInput!): LHPropertyType
  """
  update a lighthouse property
  """
  updateLHProperty(id: ID!, data: UpdateLHPropertyInput): LHPropertyType
  """
  delete a lighthouse property
  """
  deleteLHProperty(id: ID!): LHPropertyType
  """
  add an app to a lighthouse property
  """
  createLHApp(propertyId: ID!, appData: AddLHPropertyAppInput!): LHPropertyType
  """
  update an app of a lighthouse property
  """
  updateLHApp(appId: ID!, appData: LHPropertyAppInput!): LHPropertyType
  """
  delete an app of a lighthouse property
  """
  deleteLHApp(appId: ID!): LHPropertyType
}
